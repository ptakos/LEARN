net
{
    node_size = (80 40);
    HR_realname_C1 = "C1";
    HR_realname_T4 = "T4";
    HR_realname_T2 = "T2";
    HR_realname_T6 = "T6";
    HR_realname_pt = "pt";
    HR_realname_adjacent_pushback_time = "adjacent_pushback_time";
    HR_realname_P = "P";
    HR_realname_t4 = "t4";
    HR_realname_t2 = "t2";
    HR_realname_t6 = "t6";
    HR_DBN_Num_Slices = "5";
    HR_Desc = "";
    HR_OOBN_CheckConsistency = "1";
    HR_OOBN_FitExpand = "1";
    HR_Zoom_ZoomFactor = "100";
    HR_Groups_GroupColors = "";
    HR_Groups_GroupNames = "";
    HR_Groups_UserGroupsNo = "0";
    HR_Utility_Link = "63";
    HR_Probabilistic_Link = "63";
    HR_Functional_Link = "63";
    HR_Binding_Link = "63";
    HR_Information_Arc = "63";
    HR_Color_Interface = "21";
    HR_Color_Instance = "0";
    HR_Color_DiscreteFunction = "5";
    HR_Color_Function = "4";
    HR_Color_Utility = "36";
    HR_Color_Decision = "17";
    HR_Color_ContinuousChance = "48";
    HR_Color_DiscreteChance = "16";
    HR_Monitor_InitSD = "2";
    HR_Monitor_Utility_Arrange = "0";
    HR_Monitor_Mean_Variance = "1";
    HR_Monitor_Chance_Utility = "1";
    HR_Monitor_InitStates = "5";
    HR_Monitor_OpenGraph = "0";
    HR_Monitor_GraphPrecision = "100";
    HR_Monitor_AutoUpdGraph = "0";
    HR_Compile_MaxMinimalSeparators = "100000";
    HR_Compile_ApproxEpsilon = "1.0E-5";
    HR_Compile_Approximate = "0";
    HR_Compile_SaveToMemory = "0";
    HR_Compile_Compress = "0";
    HR_Compile_TriangMethod = "0";
    HR_Propagate_AutoNormal = "1";
    HR_Propagate_AutoSum = "1";
    HR_Propagate_Auto = "1";
    HR_Font_Italic = "0";
    HR_Font_Weight = "400";
    HR_Font_Size = "-12";
    HR_Font_Name = "javax.swing.plaf.FontUIResource[family=Tahoma,name=Tahoma,style=plain,size=13]";
    HR_Grid_GridShow = "0";
    HR_Grid_GridSnap = "0";
    HR_Grid_Y = "40";
    HR_Grid_X = "40";
}

node T6
{
    label = "Boarding";
    position = (253 191);
    states = ("" "" "" "" "" "" "" "" "" "");
    subtype = interval;
    state_values = (0 10 20 30 40 50 60 70 80 90 100);
    HR_LinkControlPoints = "";
    HR_State_9 = "";
    HR_State_8 = "";
    HR_State_7 = "";
    HR_State_6 = "";
    HR_State_5 = "";
    HR_State_4 = "";
    HR_NodeSize = "(134, 86)";
    HR_State_3 = "";
    HR_State_2 = "";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
    HR_LinkMode = "[C1:0]";
    HR_LinkGroup = "[C1:0]";
    HR_Group = "0";
}

node T2
{
    label = "De-boarding";
    position = (97 188);
    states = ("" "" "" "" "" "" "" "" "" "");
    subtype = interval;
    state_values = (0 10 20 30 40 50 60 70 80 90 100);
    HR_LinkControlPoints = "";
    HR_LinkGroup = "[C1:0]";
    HR_LinkMode = "[C1:0]";
    HR_State_0 = "";
    HR_State_1 = "";
    HR_Desc = "";
    HR_State_2 = "";
    HR_State_3 = "";
    HR_NodeSize = "(134, 86)";
    HR_State_4 = "";
    HR_State_5 = "";
    HR_State_6 = "";
    HR_State_7 = "";
    HR_State_8 = "";
    HR_State_9 = "";
    HR_Group = "0";
}

node T4
{
    label = "Fuelling";
    position = (408 197);
    states = ("" "" "" "" "");
    subtype = interval;
    state_values = (0 20 40 60 80 100);
    HR_State_9 = "";
    HR_State_8 = "";
    HR_State_0 = "";
    HR_State_1 = "";
    HR_Desc = "";
    HR_State_2 = "";
    HR_State_3 = "";
    HR_State_4 = "";
    HR_State_5 = "";
    HR_LinkMode = "[C1:0]";
    HR_LinkGroup = "[C1:0]";
    HR_LinkControlPoints = "";
    HR_State_6 = "";
    HR_State_7 = "";
    HR_NodeSize = "(165, 68)";
    HR_Group = "0";
}

node C1
{
    label = "Turnaround Process\nCompletion Rate";
    position = (255 40);
    states = ("" "" "" "" "" "" "" "" "" "");
    subtype = interval;
    state_values = (0 10 20 30 40 50 60 70 80 90 100);
    HR_LinkMode = "";
    HR_LinkGroup = "";
    HR_State_9 = "";
    HR_State_8 = "";
    HR_State_7 = "";
    HR_State_6 = "";
    HR_State_5 = "";
    HR_State_4 = "";
    HR_NodeSize = "(134, 86)";
    HR_State_3 = "";
    HR_State_2 = "";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

potential (T6)
{
    model_nodes = ();
    model_data = ( Uniform (0, 100) );
    data = ( 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 );
}

potential (T2)
{
    model_nodes = ();
    model_data = ( Uniform (0, 100) );
    data = ( 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 );
}

potential (T4)
{
    model_nodes = ();
    model_data = ( Uniform (0, 100) );
    data = ( 0.2 0.2 0.2 0.2 0.2 );
}

potential (C1 | T4 T6 T2)
{
    model_nodes = ();
    model_data = ( if (T2 > 90, (T2 + T4 + T6) / 3, T2 / 3) );
}
